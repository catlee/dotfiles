export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.cargo/bin:$PATH

# oh-my-zsh
ZSH=$HOME/.oh-my-zsh

DRACULA_DISPLAY_FULL_CWD=1
DRACULA_DISPLAY_TIME=1
DRACULA_DISPLAY_CONTEXT=1
ZSH_THEME="dracula/dracula"
VI_MODE_SET_CURSOR=true
MODE_INDICATOR="%F{green}(N)%f"

plugins=(git vi-mode zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

export EDITOR=nvim
export PAGER=less

# Don't print an error if no matches for glob
setopt nonomatch

# Directory stacks
setopt autopushd pushdignoredups

setopt extendedglob
setopt shwordsplit
setopt PROMPT_SUBST

# History stuff
setopt histfindnodups histignoredups histreduceblanks
setopt incappendhistory histexpiredupsfirst extendedhistory
unsetopt share_history
HISTFILE=~/.zsh_history
SAVEHIST=10000
HISTSIZE=20000
setopt HIST_EXPIRE_DUPS_FIRST

# TAB-completion
zstyle ':completion:*' completer _complete _match _approximate

source ~/.aliases

# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line

[ -f /opt/dev/dev.sh ] && source /opt/dev/dev.sh

# Fuzzy finding
export FZF_CTRL_T_COMMAND="fd --type f --hidden"
export FZF_DEFAULT_COMMAND="fd --type f"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Homebrew
[[ -x /opt/homebrew/bin/brew ]] && eval $(/opt/homebrew/bin/brew shellenv)

# TERM setup
[[ "$TERM" == "screen" && -n "$TMUX" ]] && export TERM=screen-256color

# Ruby stuff
[[ -f /opt/dev/sh/chruby/chruby.sh ]] && { type chruby >/dev/null 2>&1 || chruby () { source /opt/dev/sh/chruby/chruby.sh; chruby "$@"; } }

# Python stuff
if [ -d $HOME/.pyenv ]; then
    export PYENV_ROOT=$HOME/.pyenv
    export PATH=$PYENV_ROOT/bin:$PATH
    eval "$(pyenv init -)"
fi
